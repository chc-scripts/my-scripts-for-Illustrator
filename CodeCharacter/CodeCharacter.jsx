/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*CodeCharacter
>=------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Author: Christian Condamine - (christian.condamine@laposte.net)
>=------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
En:     This script is a simple dialog box allowing to find the unicode or ascii code of a character and vice versa.
Fr :      Il s'agit d'une simple boite de dialogue permettant de de trouver le code ascii ou unicode d'un caractère et inversement.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
#targetengine main
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Dialog Box    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    $.localize = true;
    $.locale = null;
    if($.locale.substr(0,2) != "fr"){$.locale = "en"};
    msg1 = localize({en:"Only one character must be entered!", fr:"Vous ne devez entrer qu\'un seul caract\350re !"})
    msg2 = localize({en:"The entered ascii code must be a number!", fr:"Le code ascii entr\351 doit \352tre un nombre !"})
    msg3 = localize({en:"The entered unicode value must have at least 4 characters!", fr:"La valeur unicode entr\351e doit comporter au moins 4 caract\350res !"})
    var boiteDial = new Window("dialog",{en:"Code Character", fr:"Code caract\350re"}); 
        boiteDial.alignChildren = ["center","top"]; 
//// Enter_Value_Panel
    var panValEntree = boiteDial.add("panel", [0,0,140,60], {en:"Value to convert", fr:"Valeur \340 convertir"});  
        panValEntree.orientation = "row"; 
        panValEntree.margins = 10; 
    var ettValEntree = panValEntree.add("edittext",[10,15,90,38],0); 
    var btnValid = panValEntree.add("button",[100,15,130,38],"\u003e");
        btnValid.onClick = function() {switch(dpTypeConv.selection.index){
                                                          case 0 : charToBin(ettValEntree.text);break;
                                                          case 1 : charToDec(ettValEntree.text);break;
                                                          case 2 : charToHex(ettValEntree.text);break;
                                                          case 3 : charToOct(ettValEntree.text);break;
                                                          case 4 : charToUnicode(ettValEntree.text);break;
                                                          case 5 : decToChar(ettValEntree.text);break;
                                                          case 6 : unicodeToChar(ettValEntree.text);break;
                                                          case 7 : unicodeToDec(ettValEntree.text);break;
                                                       };
                                               ettValSortie.text = result
                                               ettValEntree.active = true;
                                               };
//// Type_Conversion_Panel
    var panTypeConv = boiteDial.add("panel", [0,0,140,60], "Base Conversion");  
        panTypeConv.orientation = "row"; 
        panTypeConv.margins = 10; 
    var dpTypeConv = panTypeConv.add("dropdownlist", [10,15,130,38], ["char to bin", "char to dec", "char to hex", "char to oct", "char to unicode", "dec to char", "unicode to char", "unicode to dec"]); 
        dpTypeConv.selection = 1; 
        dpTypeConv.onChange = function() {switch(dpTypeConv.selection.index){
                                                                      case 0 : charToBin(ettValEntree.text);break;
                                                                      case 1 : charToDec(ettValEntree.text);break;
                                                                      case 2 : charToHex(ettValEntree.text);break;
                                                                      case 3 : charToOct(ettValEntree.text);break;
                                                                      case 4 : charToUnicode(ettValEntree.text);break;
                                                                      case 5 : decToChar(ettValEntree.text);break;
                                                                      case 6 : unicodeToChar(ettValEntree.text);break;
                                                                      case 7 : unicodeToDec(ettValEntree.text);break;
                                                                   }; 
                                               ettValSortie.text = result
                                               };
//// Panneau_Résultat
    var panResultat = boiteDial.add("panel", [0,0,140,60], {en:"Result", fr:"R\351sultat"}); 
        panResultat.orientation = "row"; 
    var ettValSortie = panResultat.add("edittext",[10,15,130,38], {en:"Result", fr:"R\351sultat"});
    var btnFermer = boiteDial.add("button", undefined, {en:"Close", fr:"Fermer"}, {name:"ok"}); 
    boiteDial.show();
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Char to Bin    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function charToBin(valEnt){
    if (!isNaN(valEnt)){
        switch (parseInt(valEnt).toString(2)%4) {
            case 3 : result  = "000" + parseInt(valEnt).toString(2);break;
            case 2 : result  = "00" + parseInt(valEnt).toString(2);break;
            case 1 : result  = "0" + parseInt(valEnt).toString(2);break;
            default : result  = parseInt(valEnt).toString(2);break;
        };
    }else{
            if(valEnt.length !=1){
                alert(msg1);
                result = {en:"Error", fr:"Erreur"}
            }else{
                switch (valEnt.charCodeAt(0).toString(2).toString(2)%4) {
                    case 3 : result  = "000" + valEnt.charCodeAt(0).toString(2);break;
                    case 2 : result  = "00" + valEnt.charCodeAt(0).toString(2);break;
                    case 1 : result  = "0" + valEnt.charCodeAt(0).toString(2);break;
                    default : result  = valEnt.charCodeAt(0).toString(2);break;
                };
            };
    };
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Char to Dec    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function charToDec(valEnt){
    if(valEnt.length !=1){
        alert(msg1);
        result = {en:"Error", fr:"Erreur"}
    }else{
        result  = valEnt.charCodeAt (0);
    };
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Char to Hex    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function charToHex(valEnt){
    if (!isNaN(valEnt)){
        result  = parseInt(valEnt).toString(16);
    }else{
            if(valEnt.length !=1){
                alert(msg1);
                result = {en:"Error", fr:"Erreur"}
           }else{    
                result  = valEnt.charCodeAt(0).toString(16);
           };
    };
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Char to Oct    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function charToOct(valEnt){
    if (!isNaN(valEnt)){
        result  = "\\" + parseInt(valEnt).toString(8);
    }else{
            if(valEnt.length !=1){
                alert(msg1);
                result = {en:"Error", fr:"Erreur"}
            }else{
                result  = "\\" + valEnt.charCodeAt(0).toString(8);
            };
    };
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Char to unicode    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function charToUnicode(valEnt){
    if(valEnt.length !=1){
        alert(msg1);
        result = {en:"Error", fr:"Erreur"}
     }else{
        var hex = valEnt.charCodeAt(0).toString(16);
        result  = "\\u" + "0000".substring(0, 4 -hex.length) + hex;
     };
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Dec to Char    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function decToChar(valEnt){
    if (isNaN(valEnt)){
        alert(msg2);
        result = {en:"Error", fr:"Erreur"}
    }else{
        result  = String.fromCharCode(valEnt);
    };
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Unicode to string    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function unicodeToChar(valEnt){
    var str = valEnt.substr(valEnt.length-4, 4);
    if(str.length!=4){
        alert(msg3);
        result = {en:"Error", fr:"Erreur"}
    }else{
        result  = String.fromCharCode(parseInt(str,16));
    };
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//    Unicode to char    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function unicodeToDec(valEnt){
    var str = valEnt.substr(valEnt.length-4, 4);
    if(str.length!=4){
        alert(msg3);
        result = {en:"Error", fr:"Erreur"}
    }else{
        unicode = String.fromCharCode(parseInt(str,16));
        result  =unicode.charCodeAt (0)
    };
};